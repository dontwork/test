[{"flatMessage":"Parameter 'update' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(6,27)"},{"flatMessage":"Parameter 'prop' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(6,35)"},{"flatMessage":"Parameter 'func' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(7,19)"},{"flatMessage":"Parameter 'model' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(8,21)"},{"flatMessage":"Parameter 'create' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(15,21)"},{"flatMessage":"Parameter 'update' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(15,29)"},{"flatMessage":"Parameter 'prop' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(15,37)"},{"flatMessage":"Element implicitly has an 'any' type because type '{}' has no index signature.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7017,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(21,7)"},{"flatMessage":"Parameter 'model' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(26,28)"},{"flatMessage":"Parameter 'value' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(35,24)"},{"flatMessage":"Parameter 'to' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(35,31)"},{"flatMessage":"Parameter 'label' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(44,34)"},{"flatMessage":"Parameter 'init' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(44,41)"},{"flatMessage":"Parameter 'update' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(45,19)"},{"flatMessage":"Parameter 'amount' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(46,29)"},{"flatMessage":"Parameter '_event' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(47,23)"},{"flatMessage":"Parameter 'model' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(48,25)"},{"flatMessage":"Parameter '_event' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(54,32)"},{"flatMessage":"Parameter 'model' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(55,23)"},{"flatMessage":"Parameter 'model' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(67,25)"},{"flatMessage":"Cannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2349,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(68,14)"},{"flatMessage":"Cannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2349,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(70,9)"},{"flatMessage":"Cannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2349,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(71,11)"},{"flatMessage":"Cannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2349,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(72,11)"},{"flatMessage":"Cannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2349,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(74,9)"},{"flatMessage":"Cannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2349,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(75,11)"},{"flatMessage":"Parameter 'update' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(83,38)"},{"flatMessage":"Expected 2 arguments, but got 1.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2554,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(84,18)"},{"flatMessage":"Parameter 'model' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(92,23)"},{"flatMessage":"Parameter 'update' implicitly has an 'any' type.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(101,26)"},{"flatMessage":"Cannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2349,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(107,14)"},{"flatMessage":"Cannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2349,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(111,10)"},{"flatMessage":"Argument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.","formatted":"\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m27\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                          ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m6\u001b[0m:\u001b[93m35\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m6\u001b[0m var nestUpdate = function(update, prop) {\n\u001b[30;47m \u001b[0m \u001b[91m                                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m7\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'func' implicitly has an 'any' type.\n\n\u001b[30;47m7\u001b[0m   return function(func) {\n\u001b[30;47m \u001b[0m \u001b[91m                  ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m8\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m8\u001b[0m     update(function(model) {\n\u001b[30;47m \u001b[0m \u001b[91m                    ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m21\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'create' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                    ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m15\u001b[0m:\u001b[93m37\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'prop' implicitly has an 'any' type.\n\n\u001b[30;47m15\u001b[0m var nest = function(create, update, prop) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                    ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m7\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7017: \u001b[0mElement implicitly has an 'any' type because type '{}' has no index signature.\n\n\u001b[30;47m21\u001b[0m       initialModel[prop] = component.model();\n\u001b[30;47m  \u001b[0m \u001b[91m      ~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m26\u001b[0m:\u001b[93m28\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m26\u001b[0m     result.view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                           ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m24\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'value' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                       ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m35\u001b[0m:\u001b[93m31\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'to' implicitly has an 'any' type.\n\n\u001b[30;47m35\u001b[0m var convert = function(value, to) {\n\u001b[30;47m  \u001b[0m \u001b[91m                              ~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m34\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'label' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                 ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m44\u001b[0m:\u001b[93m41\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'init' implicitly has an 'any' type.\n\n\u001b[30;47m44\u001b[0m var createTemperature = function(label, init) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                        ~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m45\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m45\u001b[0m   return function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                  ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m46\u001b[0m:\u001b[93m29\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'amount' implicitly has an 'any' type.\n\n\u001b[30;47m46\u001b[0m     var increase = function(amount) {\n\u001b[30;47m  \u001b[0m \u001b[91m                            ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m47\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m47\u001b[0m       return function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m48\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m48\u001b[0m         update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m54\u001b[0m:\u001b[93m32\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter '_event' implicitly has an 'any' type.\n\n\u001b[30;47m54\u001b[0m     var changeUnits = function(_event) {\n\u001b[30;47m  \u001b[0m \u001b[91m                               ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m55\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m55\u001b[0m       update(function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m67\u001b[0m:\u001b[93m25\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m67\u001b[0m     var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                        ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m68\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m 68\u001b[0m       return m(\"div.temperature\", [\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m 69\u001b[0m         label, \" Temperature: \", model.value, m.trust(\"&deg;\"), model.units,\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m...\u001b[0m \n\u001b[30;47m 76\u001b[0m         )\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\u001b[30;47m 77\u001b[0m       ]);\n\u001b[30;47m   \u001b[0m \u001b[91m~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m70\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m70\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m73\u001b[0m         ),\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m71\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m71\u001b[0m           m(\"button\", { onclick: increase( 1) }, \"Increase\"),\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m72\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m72\u001b[0m           m(\"button\", { onclick: increase(-1) }, \"Decrease\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m74\u001b[0m:\u001b[93m9\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m74\u001b[0m         m(\"div\",\n\u001b[30;47m  \u001b[0m \u001b[91m        ~~~~~~~~\u001b[0m\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[30;47m76\u001b[0m         )\n\u001b[30;47m  \u001b[0m \u001b[91m~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m11\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ route: Route; mount: { (element: Element, component: ComponentTypes<any, any>): void; (element: Element, component: null): void; }; withAttr: { (name: string, callback: (value: any) => any): (e: { ...; }) => void; <T>(name: string, callback: (this: T, value: any) => any, thisArg: T): (e: { ...; }) => void; }; ... ...' has no compatible call signatures.\n\n\u001b[30;47m75\u001b[0m           m(\"button\", { onclick: changeUnits }, \"Change Poonits\")\n\u001b[30;47m  \u001b[0m \u001b[91m          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m1\u001b[0m import * as m from 'mithril'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m83\u001b[0m:\u001b[93m38\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m83\u001b[0m var createTemperaturePair = function(update) {\n\u001b[30;47m  \u001b[0m \u001b[91m                                     ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m84\u001b[0m:\u001b[93m18\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2554: \u001b[0mExpected 2 arguments, but got 1.\n\n\u001b[30;47m84\u001b[0m   var air = nest(createTemperature(\"Air\"), update, \"air\");\n\u001b[30;47m  \u001b[0m \u001b[91m                 ~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m92\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'model' implicitly has an 'any' type.\n\n\u001b[30;47m92\u001b[0m   var view = function(model) {\n\u001b[30;47m  \u001b[0m \u001b[91m                      ~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m101\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'update' implicitly has an 'any' type.\n\n\u001b[30;47m101\u001b[0m var createApp = function(update) {\n\u001b[30;47m   \u001b[0m \u001b[91m                         ~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m107\u001b[0m:\u001b[93m14\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{ combine<T>(combiner: (...streams: any[]) => T, streams: Stream<any>[]): Stream<T>; merge(streams: Stream<any>[]): Stream<any[]>; scan<T, U>(fn: (acc: U, value: T) => U, acc: U, stream: Stream<T>): Stream<...>; scanMerge<T, U>(pairs: [...][], acc: U): Stream<...>; scanMerge<U>(pairs: [...][], acc: U): Stream<...>; ...' has no compatible call signatures.\n\n\u001b[30;47m107\u001b[0m var update = stream();\n\u001b[30;47m   \u001b[0m \u001b[91m             ~~~~~~~~\u001b[0m\n\n  \u001b[96msrc/main.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m1\u001b[0m\n    \u001b[30;47m2\u001b[0m import * as stream from 'mithril/stream'\n    \u001b[30;47m \u001b[0m \u001b[96m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    Type originates at this import. A namespace-style import cannot be called or constructed, and will cause a failure at runtime. Consider using a default import or import require here instead.\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m111\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2349: \u001b[0mCannot invoke an expression whose type lacks a call signature. Type '{}' has no compatible call signatures.\n\n\u001b[30;47m111\u001b[0m   return func(model);\n\u001b[30;47m   \u001b[0m \u001b[91m         ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/main.ts\u001b[0m:\u001b[93m117\u001b[0m:\u001b[93m12\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type 'HTMLElement | null' is not assignable to parameter of type 'Element'.\n  Type 'null' is not assignable to type 'Element'.\n\n\u001b[30;47m117\u001b[0m   m.render(element, app.view(model));\n\u001b[30;47m   \u001b[0m \u001b[91m           ~~~~~~~\u001b[0m\n","category":1,"code":2345,"type":"semantic","fileLine":"/Users/oliverhunt/code/meiosis/src/main.ts(117,12)"}]
